/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Diseño;

import DAO.PagosDAO;
import Entidades.Anual;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pieri
 */
public class JpTablaControl extends javax.swing.JPanel {
    PagosDAO p1 = new PagosDAO();

    /**
     * Creates new form JpTablaControl
     */
    public JpTablaControl() {
        initComponents();
        
        try {
            llenarTablaAnual();
        } catch (Exception ex) {
            Logger.getLogger(JpTabla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static String fecha() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatofecha.format(fecha);
    }
    
    public void CentrarDatosPagos(JTable tb){
        DefaultTableCellRenderer cabecera = (DefaultTableCellRenderer) tb.getTableHeader().getDefaultRenderer();
        cabecera.setHorizontalAlignment(SwingConstants.CENTER);
        
        DefaultTableCellRenderer Cuerpo = new DefaultTableCellRenderer();
        Cuerpo.setHorizontalAlignment(SwingConstants.CENTER);
        
        for (int i=0; i<tb.getColumnCount(); i++){
            tb.getColumnModel().getColumn(i).setCellRenderer(Cuerpo);
        }
        
        tb.setRowHeight(20);
    }
    
    private void modeloTablaPagos( ArrayList Anuales){
        DefaultTableModel tabla1 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int colum){
                return false;
            }
        };
        
        tabla1.setRowCount(Anuales.size());
        tabla1.addColumn("DNI");
        tabla1.addColumn("MES.P");
        tabla1.addColumn("AÑO.P");
        tabla1.addColumn("F.Pago");
        tabla1.addColumn("Monto");
        
        for (int i=0; i<Anuales.size(); i++){
            Anual b = (Anual) Anuales.get(i);
            tabla1.setValueAt(b.getDniSocio(), i,0);
            tabla1.setValueAt(b.getMes(), i, 1);
            tabla1.setValueAt(b.getAño(), i, 2);
            tabla1.setValueAt(b.getFechaPago(), i, 3);
            tabla1.setValueAt(b.getMonto(), i, 4);
        }
        
        tblPagos.setModel(tabla1);
        CentrarDatosPagos(tblPagos);
    }
    
    public void llenarTablaAnual() throws Exception{
        ArrayList<Anual> lista1 ;
        lista1 = p1.listaPagosA("2022");
        modeloTablaPagos(lista1);
    }
    
    
    
    
    public void CentrarDatosControl(JTable tb){
        DefaultTableCellRenderer cabecera = (DefaultTableCellRenderer) tb.getTableHeader().getDefaultRenderer();
        cabecera.setHorizontalAlignment(SwingConstants.CENTER);
        
        DefaultTableCellRenderer Cuerpo = new DefaultTableCellRenderer();
        Cuerpo.setHorizontalAlignment(SwingConstants.CENTER);
        
        for (int i=0; i<tb.getColumnCount(); i++){
            tb.getColumnModel().getColumn(i).setCellRenderer(Cuerpo);
        }
        
        tb.setRowHeight(20);
    }
    
    private void modeloTablaControl( ArrayList control){
        DefaultTableModel tabla1 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int colum){
                return false;
            }
        };
        
        tabla1.setRowCount(control.size());
        tabla1.addColumn("DNI");
        tabla1.addColumn("MES.P");
        tabla1.addColumn("AÑO.P");
        tabla1.addColumn("F.Pago");
        tabla1.addColumn("Monto");
        
        for (int i=0; i<control.size(); i++){
            Anual b = (Anual) control.get(i);
            tabla1.setValueAt(b.getDniSocio(), i,0);
            tabla1.setValueAt(b.getMes(), i, 1);
            tabla1.setValueAt(b.getAño(), i, 2);
            tabla1.setValueAt(b.getFechaPago(), i, 3);
            tabla1.setValueAt(b.getMonto(), i, 4);
        }
        
        tblPagos.setModel(tabla1);
        CentrarDatosPagos(tblPagos);
    }
    
    public void llenarTablaControl() throws Exception{
        ArrayList<Anual> lista1 ;
        lista1 = p1. listaControl(txtBuscar.getText());
        modeloTablaControl(lista1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbAnual = new javax.swing.JScrollPane();
        tblPagos = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Mensualidad", "Fecha de inscripción", "Celular", "Dirección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAnual.setViewportView(tblPagos);

        add(tbAnual, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 870, 310));

        txtBuscar.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtBuscar.setForeground(new java.awt.Color(51, 51, 51));
        txtBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 250, 30));

        btnBuscar.setBackground(new java.awt.Color(0, 102, 102));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnBuscar.setFocusable(false);
        btnBuscar.setPreferredSize(new java.awt.Dimension(40, 40));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 50, 30));

        jLabel1.setBackground(new java.awt.Color(0, 51, 153));
        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("CONTROL DEL PAGO DE SOCIOS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        // TODO add your handling code here:
        btnBuscar.setEnabled(true);
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try {
            llenarTablaControl();
        } catch (Exception ex) {
            Logger.getLogger(JpTabla.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane tbAnual;
    private javax.swing.JTable tblPagos;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
